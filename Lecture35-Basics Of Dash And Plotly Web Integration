'''Dash and plotly'''
import dash

#Initialize the Dash apps
app = dash.Dash(__name__)
from dash import dcc, html
#Define the layout of chatbot
app.layout = html.Div([
    html.H1("My Dash App",style={'textAlign' : 'center'}),
    dcc.Input(id='input-box',type='text', value ='Type Something...'),
    html.Button('Submit',id='button'),
    html.Div(id='output-div')
])


# Callback to Update the Output
from dash.dependencies import Input, Output

#Define callback to update output
@app.callback(
    Output('output-div','children'),
    Input('button','n_clicks'),
    [dash.dependencies.State('input-box','value')]
)
def update_output(n_clicks,value):
  if n_clicks is not None:
    return f'You have entered {value}'

  return ' '

#Running the app
if __name__ == '__main__':
  app.run_server(debug=True)

app.layout = html.Div([
    html.H1("Chatbot", style={'textAlign': 'center'}),
    dcc.Textarea(
        id='user-input',
        value='Type your question here...',
        style={'width': '100%', 'height': 100}
    ),
    html.Button('Submit', id='submit-button', n_clicks=0),
    html.Div(id='chatbot-output', style={'padding': '10px'})
])

#Define callback to update chatbot response
@app.callback(
    Output('chatbot_output','children'),
    Input('submit-button','n_clicks'),
    [dash.dependencies.State('user-input','value')]
)

def update_output(n_clicks, user_input):
  if n_clicks > 0:
    return html.Div([
        html.P(f"You : {user_input}",style={'margin' : '10px'}),
        html.P(f"Bot : I am training now, ask something else.",style = {'margin': '10px', 'backgroundColor' : '#f0f0f0'})
    ])
  return "Ask me something!"
